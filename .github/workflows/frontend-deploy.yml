name: Frontend deployment

on:
  push:
    paths:
      - "frontend/**" # Run only if `frontend` files change
    branches:
      - main # Trigger only on `main` branch

jobs:
  lint-and-format: # Job-1
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # Pull repo code

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18 # Use Node-18

      - name: Install dependencies
        run: npm ci # Clean install deps
        working-directory: frontend

      - name: Run Prettier Check (from repo root ./coflow)
        run: npm run format:check # Enforce code formatting

      - name: Run ESLint (only in ./frontend dir)
        run: npm run lint:check # Lint frontend files
        working-directory: frontend

  build-and-deploy: # Job-2
    runs-on: ubuntu-latest
    needs: lint-and-format # Only runs if Linting & Formatting passed successfully

    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # Pull repo code

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Enable advanced Docker builds

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract GitHub commit hash
        id: vars
        run: echo "TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and Push Frontend Image
        env:
          TAG: ${{ env.TAG }}
        run: | # Build & Push frontend Image with commit tag for versioning
          docker build \
            -t ${{ secrets.DOCKER_USERNAME }}/coflow-frontend:${{ env.TAG }} \
            ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/coflow-frontend:${{ env.TAG }}

      # Optional: Trigger Netlify re-deploy via deploy-hook
      # - name: Trigger Frontend Netlify Re-Deploy
      #   run: curl -X POST ${{ secrets.NETLIFY_HOOK_FRONTEND }}
